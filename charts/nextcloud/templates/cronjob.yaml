{{- if .Values.cronjob.enabled }}
{{- if .Capabilities.APIVersions.Has "batch/v1/CronJob" }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ template "nextcloud.fullname" . }}-cron
  labels:
    app.kubernetes.io/name: {{ include "nextcloud.name" . }}
    helm.sh/chart: {{ include "nextcloud.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
{{ toYaml .Values.cronjob.annotations | indent 4 }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  concurrencyPolicy: Forbid
  {{- with .Values.cronjob.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with .Values.cronjob.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ . }}
  {{- end }}
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "nextcloud.name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "nextcloud.name" . }}
            app.kubernetes.io/managed-by: {{ .Release.Service }}
        spec:
          restartPolicy: Never
          {{- if (default .Values.image.pullSecrets .Values.cronjob.image.pullSecrets) }}
          imagePullSecrets:
          {{- range (default .Values.image.pullSecrets .Values.cronjob.image.pullSecrets) }}
            - name: {{ . }}
          {{- end }}
          {{- end }}
          containers:
          - name: {{ .Chart.Name }}
            image: {{ include "nextcloud.image" . }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            securityContext:
              runAsUser: 33
              runAsGroup: 33
              {{- if .Values.nextcloud.extraSecurityContext }}
              {{- with .Values.nextcloud.extraSecurityContext }}
{{- toYaml . | nindent 14 }}
              {{- end }}
              {{- end }}
            env:
            {{- if .Values.phpClientHttpsFix.enabled }}
            - name: OVERWRITEPROTOCOL
              value: {{ .Values.phpClientHttpsFix.protocol | quote }}
            {{- end }}
            {{- if .Values.internalDatabase.enabled }}
            - name: SQLITE_DATABASE
              value: {{ .Values.internalDatabase.name | quote }}
            {{- else if .Values.mariadb.enabled }}
            - name: MYSQL_HOST
              value: {{ template "mariadb.primary.fullname" .Subcharts.mariadb }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mariadb.auth.database | quote }}
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                  key: {{ .Values.externalDatabase.existingSecret.usernameKey | default "db-username" }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                  key: {{ .Values.externalDatabase.existingSecret.passwordKey | default "db-password" }}
            {{- else if .Values.postgresql.enabled }}
            - name: POSTGRES_HOST
              value: {{ template "postgresql.primary.fullname" .Subcharts.postgresql }}
            - name: POSTGRES_DB
              {{- if .Values.postgresql.auth.database }}
              value: {{ .Values.postgresql.auth.database | quote }}
              {{ else }}
              value: {{ .Values.postgresql.global.postgresql.auth.database | quote }}
              {{- end }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                  key: {{ .Values.externalDatabase.existingSecret.usernameKey | default "db-username" }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                  key: {{ .Values.externalDatabase.existingSecret.passwordKey | default "db-password" }}
            {{- else }}
              {{- if eq .Values.externalDatabase.type "postgresql" }}
            - name: POSTGRES_HOST
              value: {{ .Values.externalDatabase.host | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.externalDatabase.database | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                  key: {{ .Values.externalDatabase.existingSecret.usernameKey | default "db-username" }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                  key: {{ .Values.externalDatabase.existingSecret.passwordKey | default "db-password" }}
              {{- else }}
            - name: MYSQL_HOST
              value: {{ .Values.externalDatabase.host | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.externalDatabase.database | quote }}
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                  key: {{ .Values.externalDatabase.existingSecret.usernameKey | default "db-username" }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-%s" .Release.Name "db") }}
                  key: {{ .Values.externalDatabase.existingSecret.passwordKey | default "db-password" }}
              {{- end }}
            {{- end }}
            - name: NEXTCLOUD_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.nextcloud.existingSecret.secretName | default (include "nextcloud.fullname" .) }}
                  key: {{ .Values.nextcloud.existingSecret.usernameKey | default "nextcloud-username" }}
            - name: NEXTCLOUD_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.nextcloud.existingSecret.secretName | default (include "nextcloud.fullname" .) }}
                  key: {{ .Values.nextcloud.existingSecret.passwordKey | default "nextcloud-password" }}
            - name: NEXTCLOUD_TRUSTED_DOMAINS
              value: {{ .Values.nextcloud.host }}
            {{- if ne (int .Values.nextcloud.update) 0 }}
            - name: NEXTCLOUD_UPDATE
              value: {{ .Values.nextcloud.update | quote }}
            {{- end }}
            - name: NEXTCLOUD_DATA_DIR
              value: {{ .Values.nextcloud.datadir | quote }}
            {{- if .Values.nextcloud.mail.enabled }}
            - name: MAIL_FROM_ADDRESS
              value: {{ .Values.nextcloud.mail.fromAddress | quote }}
            - name: MAIL_DOMAIN
              value: {{ .Values.nextcloud.mail.domain | quote }}
            - name: SMTP_HOST
              value: {{ .Values.nextcloud.mail.smtp.host | quote }}
            - name: SMTP_SECURE
              value: {{ .Values.nextcloud.mail.smtp.secure | quote }}
            - name: SMTP_PORT
              value: {{ .Values.nextcloud.mail.smtp.port | quote }}
            - name: SMTP_AUTHTYPE
              value: {{ .Values.nextcloud.mail.smtp.authtype | quote }}
            - name: SMTP_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.nextcloud.existingSecret.secretName | default (include "nextcloud.fullname" .) }}
                  key: {{ .Values.nextcloud.existingSecret.smtpUsernameKey | default "smtp-username" }}
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.nextcloud.existingSecret.secretName | default (include "nextcloud.fullname" .) }}
                  key: {{ .Values.nextcloud.existingSecret.smtpPasswordKey | default "smtp-password" }}
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: {{ template "nextcloud.redis.fullname" . }}-master
            - name: REDIS_HOST_PORT
              value: {{ .Values.redis.master.service.ports.redis | quote }}
            {{- if and .Values.redis.auth.existingSecret .Values.redis.auth.existingSecretPasswordKey }}
            - name: REDIS_HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.auth.existingSecret }}
                  key: {{ .Values.redis.auth.existingSecretPasswordKey }}
            {{- else }}
            - name: REDIS_HOST_PASSWORD
              value: {{ .Values.redis.auth.password }}
            {{- end }}
            {{- end }}
            command: [ "php" ]
            args: ['-f', '/var/www/html/cron.php']
            resources:
{{ toYaml (default .Values.resources .Values.cronjob.resources) | indent 16 }}
            volumeMounts:
            - name: nextcloud-main
              mountPath: /var/www/
              subPath: {{ ternary "root" (printf "%s/%s" .Values.nextcloud.persistence.subPath "root") (empty .Values.nextcloud.persistence.subPath) }}
            - name: nextcloud-main
              mountPath: /var/www/html
              subPath: {{ ternary "html" (printf "%s/%s" .Values.nextcloud.persistence.subPath "html") (empty .Values.nextcloud.persistence.subPath) }}
            {{- if and .Values.persistence.nextcloudData.enabled .Values.persistence.enabled }}
            - name: nextcloud-data
              mountPath: {{ .Values.nextcloud.datadir }}
              subPath: {{ ternary "data" (printf "%s/%s" .Values.persistence.nextcloudData.subPath "data") (empty .Values.persistence.nextcloudData.subPath) }}
            {{- else }}
            - name: nextcloud-main
              mountPath: {{ .Values.nextcloud.datadir }}
              subPath: {{ ternary "data" (printf "%s/%s" .Values.persistence.subPath "data") (empty .Values.persistence.subPath) }}
            {{- end }}
            - name: nextcloud-main
              mountPath: /var/www/html/config
              subPath: {{ ternary "config" (printf "%s/%s" .Values.nextcloud.persistence.subPath "config") (empty .Values.nextcloud.persistence.subPath) }}
            - name: nextcloud-main
              mountPath: /var/www/html/custom_apps
              subPath: {{ ternary "custom_apps" (printf "%s/%s" .Values.nextcloud.persistence.subPath "custom_apps") (empty .Values.nextcloud.persistence.subPath) }}
            - name: nextcloud-main
              mountPath: /var/www/tmp
              subPath: {{ ternary "tmp" (printf "%s/%s" .Values.nextcloud.persistence.subPath "tmp") (empty .Values.nextcloud.persistence.subPath) }}
            - name: nextcloud-main
              mountPath: /var/www/html/themes
              subPath: {{ ternary "themes" (printf "%s/%s" .Values.nextcloud.persistence.subPath "themes") (empty .Values.nextcloud.persistence.subPath) }}
            {{- range $key, $value := .Values.nextcloud.configs }}
            - name: nextcloud-config
              mountPath: /var/www/html/config/{{ $key }}
              subPath: {{ $key }}
            {{- end }}
            {{- if .Values.nextcloud.configs }}
            {{- range $key, $value := .Values.nextcloud.defaultConfigs }}
            {{- if $value }}
            - name: nextcloud-config
              mountPath: /var/www/html/config/{{ $key }}
              subPath: {{ $key }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- $nginxEnabled := .Values.nginx.enabled -}}
            {{- range $key, $value := .Values.nextcloud.phpConfigs }}
            - name: nextcloud-phpconfig
              mountPath: {{ $nginxEnabled | ternary (printf "/usr/local/etc/php-fpm.d/%s" $key | quote) (printf "/usr/local/etc/php/conf.d/%s" $key | quote) }}
              subPath: {{ $key }}
            {{- end }}
            {{- if .Values.nextcloud.extraVolumeMounts }}
{{ toYaml .Values.nextcloud.extraVolumeMounts | indent 12 }}
            {{- end }}
          volumes:
          - name: nextcloud-main
          {{- if .Values.persistence.enabled }}
            persistentVolumeClaim:
              claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "nextcloud.fullname" . }}-nextcloud{{- end }}
          {{- else }}
            emptyDir: {}
          {{- end }}
          {{- if and .Values.persistence.nextcloudData.enabled .Values.persistence.enabled }}
          - name: nextcloud-data
            persistentVolumeClaim:
              claimName: {{ if .Values.persistence.nextcloudData.existingClaim }}{{ .Values.persistence.nextcloudData.existingClaim }}{{- else }}{{ template "nextcloud.fullname" . }}-nextcloud-data{{- end }}
          {{- end }}
          {{- if .Values.nextcloud.configs }}
          - name: nextcloud-config
            configMap:
              name: {{ template "nextcloud.fullname" . }}-config
          {{- end }}
          {{- if .Values.nextcloud.phpConfigs }}
          - name: nextcloud-phpconfig
            configMap:
              name: {{ template "nextcloud.fullname" . }}-phpconfig
          {{- end }}
          {{- if .Values.nextcloud.phpfpmConfigs }}
          - name: nextcloud-phpfpmconfig
            configMap:
              name: {{ template "nextcloud.fullname" . }}-phpfpmconfig
          {{- end }}
          {{- if .Values.nginx.enabled }}
          - name: nextcloud-nginx-config
            configMap:
              name: {{ template "nextcloud.fullname" . }}-nginxconfig
          {{- end }}
          {{- if .Values.nextcloud.extraVolumes }}
{{ toYaml .Values.nextcloud.extraVolumes | indent 10 }}
          {{- end }}
          securityContext:
            {{- if .Values.securityContext }}
            {{- with .Values.securityContext }}
{{- toYaml . | nindent 12 }}
            {{- end }}
            {{- end }}
    {{- with (default .Values.nodeSelector .Values.cronjob.nodeSelector) }}
          nodeSelector:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with (default .Values.affinity .Values.cronjob.affinity) }}
          affinity:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with (default .Values.tolerations .Values.cronjob.tolerations) }}
          tolerations:
{{ toYaml . | indent 12 }}
    {{- end }}
{{- end }}
